version: '3.5'

x-base:
  &default-base
  build:
    context: .
    dockerfile: Dockerfile
  image: ssvnode:latest
  command: make BUILD_PATH=/go/bin/ssvnode start-node
  networks:
    - blox-docker
  restart: always
  environment:
    CONFIG_PATH: ./config/config.yaml

services:
  ssv-node-1:
    <<: *default-base
    container_name: ssv-node-1
    environment:
      CONFIG_PATH: ./config/config.yaml

  ssv-node-2:
    <<: *default-base
    container_name: ssv-node-2
    environment:
      CONFIG_PATH: ./config/config.yaml

  ssv-node-3:
    <<: *default-base
    container_name: ssv-node-3
    environment:
      CONFIG_PATH: ./config/config.yaml

  ssv-node-4:
    <<: *default-base
    container_name: ssv-node-4
    environment:
      CONFIG_PATH: ./config/config.yaml

  exporter-node:
    <<: *default-base
    container_name: exporter-node
    command: make start-exporter
    environment:
      CONFIG_PATH: ./config/config.exporter.yaml

  ssv-generate-keys:
    <<: *default-base
    container_name: ssv-generate-keys
    profiles: ["tools"]
    restart: "no"
    command: /go/bin/ssvnode generate-operator-keys

# monitoring services

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.24.0
    volumes:
      - ./monitoring/prometheus/:/etc/prometheus/
      - data_prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
    networks:
      - blox-docker

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - blox-docker
    ports:
      - "3000:3000"
    volumes:
      - data_grafana:/var/lib/grafana

networks:
  blox-docker:
    driver: bridge
    name: blox-docker

volumes:
  data_prometheus:
  data_grafana: