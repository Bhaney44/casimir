#!/bin/bash

# Get args
while getopts :m:l: flag
do
    case "${flag}" in
        m) mock=${OPTARG};;
        l) ledger=${OPTARG};;
    esac
done

# Configure and expose variables
source scripts/aws/configure
export PUBLIC_STAGE=${STAGE}

commands=("npm run dev --workspace @casimir/website")

if [ -n "$mock" ]; then

    # Set comma-separated list of services to mock
    services="users"

    # Loop over comma-separated string of services
    IFS=',' read -r -a service_list <<< "$services"
    port=3999

    # Todo kill dynamically
    npx kill-port 4000,4001,4002

    export PUBLIC_MOCK="$mock"

    for service in "${service_list[@]}"
    do
        SERVICE=$(echo $service | tr '[:lower:]' '[:upper:]')
        port=$(( port + 1 ))
        export PUBLIC_${SERVICE}_PORT=$port
    done

    commands+=("scripts/local/mock -d infrastructure/cdk -s $services")

fi

if [ -n "$ledger" ]; then

    npx kill-port 5001

    export PUBLIC_LEDGER="$ledger"
    export PUBLIC_LEDGER_PORT="5001"
    export PUBLIC_LEDGER_APP="ethereum"

    ledger_command="(sleep 3 && npx esno scripts/ledger/proxy.ts) & scripts/ledger/emulate"
    if [ "$ledger" != "true" ]; then
        ledger_command+="-a $ledger"
        export PUBLIC_LEDGER_APP="$ledger"
    fi
    commands+=("$ledger_command")

fi

npx concurrently "${commands[@]}"
