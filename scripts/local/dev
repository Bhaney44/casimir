#!/bin/bash
# Run an application dev server
#
# Example:
#
#    scripts/local/dev -a app-name -m whether-to-mock-app-services (i.e. -a web -m true)
#
# Further information:
# See https://docs.aws.amazon.com/cdk/api/v2/
#

# Configure and expose variables
source scripts/aws/configure
export PUBLIC_STAGE=${STAGE}

# Get args
while getopts :a:m:s: flag
do
    case "${flag}" in
        a) app=${OPTARG};;
        m) mock=${OPTARG};;
        s) speculos=${OPTARG};;
    esac
done

if [ "$app" == "landing" ]; then
    services="users"
else 
    # Default app
    app="web"
    services=""
fi

commands=("npm run dev --workspace @casimir/$app")

if [ -n "$mock" ]; then

    # Loop over comma-separated string of services
    IFS=',' read -r -a service_list <<< "$services"
    port=3999

    export PUBLIC_MOCK="$mock"

    for service in "${service_list[@]}"
    do
        SERVICE=$(echo $service | tr '[:lower:]' '[:upper:]')
        port=$(( port + 1 ))
        export PUBLIC_${SERVICE}_PORT=$port
    done

    commands+=("scripts/local/mock -d infrastructure/cdk -s $services")

fi

if [ -n "$speculos" ]; then

    # Close existing process if necessary
    if [ -n $(lsof -ti tcp:5001) ]; then
        kill -9 $(lsof -ti tcp:5001)
    fi

    export PUBLIC_SPECULOS_PORT="5001"
    export PUBLIC_SPECULOS_APP="ethereum"

    speculos_command="scripts/ledger/emulate"
    if [ "$speculos" != "true" ]; then
        speculos_command+="-a $speculos"
        export PUBLIC_SPECULOS_APP="$speculos"
    fi
    commands+=("sleep 3 && npx esno scripts/ledger/proxy.ts")
    commands+=("$speculos_command")

fi

for command in "${commands[@]}"
do
    $command &
done

wait && pkill -P $$