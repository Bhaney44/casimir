/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SSVManager, SSVManagerInterface } from "../SSVManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    name: "PoolDeposit",
    type: "event",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "getBalanceForPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpenPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getPoolsForUser",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakedPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "getUserBalanceForPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611202806100206000396000f3fe6080604052600436106100545760003560e01c8062d5c29a146100595780631e16d47d146100965780635598b209146100c1578063814c36a4146100fe578063d0e30db014610129578063fa4083ca14610133575b600080fd5b34801561006557600080fd5b50610080600480360381019061007b9190610abe565b610170565b60405161008d9190610ba9565b60405180910390f35b3480156100a257600080fd5b506100ab61023f565b6040516100b89190610ba9565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190610abe565b6102cd565b6040516100f59190610be4565b60405180910390f35b34801561010a57600080fd5b5061011361034a565b6040516101209190610ba9565b60405180910390f35b6101316103d8565b005b34801561013f57600080fd5b5061015a60048036038101906101559190610bff565b61098e565b6040516101679190610be4565b60405180910390f35b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561023357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116101e9575b50505050509050919050565b606060028054806020026020016040519081016040528092919081815260200182805480156102c357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610279575b5050505050905090565b6000808290508073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610c6b565b915050919050565b606060018054806020026020016040519081016040528092919081815260200182805480156103ce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610384575b5050505050905090565b60003490505b600081111561098b57600080600180549050111561043d57600160008154811061040b5761040a610c98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506104d6565b61047033428460405160200161045593929190610d30565b60405160208183030381529060405280519060200120610a17565b90506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600081905060008173ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c9190610c6b565b90506000816801bc16d674ec8000006105659190610d9c565b905060008582111561057d578590506000955061070e565b819050818661058c9190610d9c565b955060005b600180805490506105a29190610d9c565b81101561066257600180826105b79190610dd0565b815481106105c8576105c7610c98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001828154811061060757610606610c98565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061065a90610e04565b915050610591565b50600180548061067557610674610e4c565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556002859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8373ffffffffffffffffffffffffffffffffffffffff1663f340fa0182336040518363ffffffff1660e01b81526004016107489190610e8a565b6000604051808303818588803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b50505050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109445760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b7f92ecde4d5be1846d86a7b7f1126046797d9f71c3f3c42f715d4ab102976e6555338683426040516109799493929190610ea5565b60405180910390a150505050506103de565b50565b6000808290508073ffffffffffffffffffffffffffffffffffffffff166347734892856040518263ffffffff1660e01b81526004016109cd9190610e8a565b602060405180830381865afa1580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e9190610c6b565b91505092915050565b600081604051610a2690610a4e565b8190604051809103906000f5905080158015610a46573d6000803e3d6000fd5b509050919050565b6102e280610eeb83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8b82610a60565b9050919050565b610a9b81610a80565b8114610aa657600080fd5b50565b600081359050610ab881610a92565b92915050565b600060208284031215610ad457610ad3610a5b565b5b6000610ae284828501610aa9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b2081610a80565b82525050565b6000610b328383610b17565b60208301905092915050565b6000602082019050919050565b6000610b5682610aeb565b610b608185610af6565b9350610b6b83610b07565b8060005b83811015610b9c578151610b838882610b26565b9750610b8e83610b3e565b925050600181019050610b6f565b5085935050505092915050565b60006020820190508181036000830152610bc38184610b4b565b905092915050565b6000819050919050565b610bde81610bcb565b82525050565b6000602082019050610bf96000830184610bd5565b92915050565b60008060408385031215610c1657610c15610a5b565b5b6000610c2485828601610aa9565b9250506020610c3585828601610aa9565b9150509250929050565b610c4881610bcb565b8114610c5357600080fd5b50565b600081519050610c6581610c3f565b92915050565b600060208284031215610c8157610c80610a5b565b5b6000610c8f84828501610c56565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008160601b9050919050565b6000610cdf82610cc7565b9050919050565b6000610cf182610cd4565b9050919050565b610d09610d0482610a80565b610ce6565b82525050565b6000819050919050565b610d2a610d2582610bcb565b610d0f565b82525050565b6000610d3c8286610cf8565b601482019150610d4c8285610d19565b602082019150610d5c8284610d19565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da782610bcb565b9150610db283610bcb565b9250828203905081811115610dca57610dc9610d6d565b5b92915050565b6000610ddb82610bcb565b9150610de683610bcb565b9250828201905080821115610dfe57610dfd610d6d565b5b92915050565b6000610e0f82610bcb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e4157610e40610d6d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b610e8481610a80565b82525050565b6000602082019050610e9f6000830184610e7b565b92915050565b6000608082019050610eba6000830187610e7b565b610ec76020830186610e7b565b610ed46040830185610bd5565b610ee16060830184610bd5565b9594505050505056fe608060405234801561001057600080fd5b506102c2806100206000396000f3fe6080604052600436106100345760003560e01c806312065fe0146100395780634773489214610064578063f340fa01146100a1575b600080fd5b34801561004557600080fd5b5061004e6100bd565b60405161005b919061017e565b60405180910390f35b34801561007057600080fd5b5061008b600480360381019061008691906101fc565b6100c5565b604051610098919061017e565b60405180910390f35b6100bb60048036038101906100b691906101fc565b61010d565b005b600047905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461015b9190610258565b9250508190555050565b6000819050919050565b61017881610165565b82525050565b6000602082019050610193600083018461016f565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c98261019e565b9050919050565b6101d9816101be565b81146101e457600080fd5b50565b6000813590506101f6816101d0565b92915050565b60006020828403121561021257610211610199565b5b6000610220848285016101e7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061026382610165565b915061026e83610165565b925082820190508082111561028657610285610229565b5b9291505056fea264697066735822122064aaaeae330f38b8afe4c405c27ed0a23169ceaf4ae33f2a87db77d35f52fbd464736f6c63430008110033a2646970667358221220117687f44449b344512296dd064b2a5b05965789e765aee53f72a0e46bd8316264736f6c63430008110033";

type SSVManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SSVManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SSVManager__factory extends ContractFactory {
  constructor(...args: SSVManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SSVManager> {
    return super.deploy(overrides || {}) as Promise<SSVManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SSVManager {
    return super.attach(address) as SSVManager;
  }
  override connect(signer: Signer): SSVManager__factory {
    return super.connect(signer) as SSVManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SSVManagerInterface {
    return new utils.Interface(_abi) as SSVManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SSVManager {
    return new Contract(address, _abi, signerOrProvider) as SSVManager;
  }
}
