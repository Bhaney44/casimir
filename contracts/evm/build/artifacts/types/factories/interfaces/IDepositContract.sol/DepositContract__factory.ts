/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DepositContract,
  DepositContractInterface,
} from "../../../interfaces/IDepositContract.sol/DepositContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "withdrawal_credentials",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "amount",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "index",
        type: "bytes",
      },
    ],
    name: "DepositEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "withdrawal_credentials",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "deposit_data_root",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_deposit_count",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_deposit_root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060005b6001602062000025919062000155565b811015620001155760026021826020811062000046576200004562000190565b5b0154602183602081106200005f576200005e62000190565b5b015460405160200162000074929190620001ee565b60405160208183030381529060405260405162000092919062000297565b602060405180830381855afa158015620000b0573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190620000d59190620002e6565b6021600183620000e6919062000318565b60208110620000fa57620000f962000190565b5b018190555080806200010c9062000353565b91505062000015565b50620003a0565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000162826200011c565b91506200016f836200011c565b92508282039050818111156200018a576200018962000126565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6000819050919050565b620001e8620001e282620001bf565b620001c9565b82525050565b6000620001fc8285620001d3565b6020820191506200020e8284620001d3565b6020820191508190509392505050565b600081519050919050565b600081905092915050565b60005b838110156200025457808201518184015260208101905062000237565b60008484015250505050565b60006200026d826200021e565b62000279818562000229565b93506200028b81856020860162000234565b80840191505092915050565b6000620002a5828462000260565b915081905092915050565b600080fd5b620002c081620001bf565b8114620002cc57600080fd5b50565b600081519050620002e081620002b5565b92915050565b600060208284031215620002ff57620002fe620002b0565b5b60006200030f84828501620002cf565b91505092915050565b600062000325826200011c565b915062000332836200011c565b92508282019050808211156200034d576200034c62000126565b5b92915050565b600062000360826200011c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000395576200039462000126565b5b600182019050919050565b611d6380620003b06000396000f3fe60806040526004361061003f5760003560e01c806301ffc9a7146100445780632289511814610081578063621fd1301461009d578063c5f2892f146100c8575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610e97565b6100f3565b6040516100789190610edf565b60405180910390f35b61009b60048036038101906100969190610f95565b6101c5565b005b3480156100a957600080fd5b506100b261090a565b6040516100bf91906110ee565b60405180910390f35b3480156100d457600080fd5b506100dd61091c565b6040516100ea919061111f565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101be57507f85640907000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6030878790501461020b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610202906111bd565b60405180910390fd5b60208585905014610251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102489061124f565b60405180910390fd5b60608383905014610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e906112e1565b60405180910390fd5b670de0b6b3a76400003410156102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611373565b60405180910390fd5b6000633b9aca00346102f491906113cc565b14610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b9061146f565b60405180910390fd5b6000633b9aca003461034691906114be565b905067ffffffffffffffff8016811115610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c90611561565b60405180910390fd5b60006103a082610afd565b90507f649bbc62d0e31342afea4e5cd82d4049e7e1ee912fc0889aa790803be39038c589898989858a8a6103d5602054610afd565b6040516103e99897969594939291906115bd565b60405180910390a1600060028a8a600060801b60405160200161040e939291906116b6565b60405160208183030381529060405260405161042a9190611711565b602060405180830381855afa158015610447573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061046a919061173d565b90506000600280888860009060409261048593929190611774565b6040516020016104969291906117af565b6040516020818303038152906040526040516104b29190611711565b602060405180830381855afa1580156104cf573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104f2919061173d565b60028989604090809261050793929190611774565b6000801b60405160200161051d939291906117e9565b6040516020818303038152906040526040516105399190611711565b602060405180830381855afa158015610556573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610579919061173d565b60405160200161058a929190611813565b6040516020818303038152906040526040516105a69190611711565b602060405180830381855afa1580156105c3573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105e6919061173d565b90506000600280848c8c6040516020016106029392919061183f565b60405160208183030381529060405260405161061e9190611711565b602060405180830381855afa15801561063b573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061065e919061173d565b600286600060401b86604051602001610679939291906118b6565b6040516020818303038152906040526040516106959190611711565b602060405180830381855afa1580156106b2573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906106d5919061173d565b6040516020016106e6929190611813565b6040516020818303038152906040526040516107029190611711565b602060405180830381855afa15801561071f573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610742919061173d565b9050858114610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d90611987565b60405180910390fd5b6001602060026107969190611ada565b6107a09190611b25565b602054106107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da90611bcb565b60405180910390fd5b6001602060008282546107f69190611beb565b925050819055506000602054905060005b60208110156108ea5760018083160361084057826000826020811061082f5761082e611c1f565b5b018190555050505050505050610901565b60026000826020811061085657610855611c1f565b5b01548460405160200161086a929190611813565b6040516020818303038152906040526040516108869190611711565b602060405180830381855afa1580156108a3573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108c6919061173d565b92506002826108d591906114be565b915080806108e290611c4e565b915050610807565b5060006108fa576108f9611c96565b5b5050505050505b50505050505050565b6060610917602054610afd565b905090565b6000806000602054905060005b6020811015610a74576001808316036109c95760026000826020811061095257610951611c1f565b5b015484604051602001610966929190611813565b6040516020818303038152906040526040516109829190611711565b602060405180830381855afa15801561099f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906109c2919061173d565b9250610a52565b600283602183602081106109e0576109df611c1f565b5b01546040516020016109f3929190611813565b604051602081830303815290604052604051610a0f9190611711565b602060405180830381855afa158015610a2c573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a4f919061173d565b92505b600282610a5f91906114be565b91508080610a6c90611c4e565b915050610929565b50600282610a83602054610afd565b600060401b604051602001610a9a93929190611cc5565b604051602081830303815290604052604051610ab69190611711565b602060405180830381855afa158015610ad3573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610af6919061173d565b9250505090565b6060600867ffffffffffffffff811115610b1a57610b19611cfe565b5b6040519080825280601f01601f191660200182016040528015610b4c5781602001600182028036833780820191505090505b50905060008260c01b905080600760088110610b6b57610b6a611c1f565b5b1a60f81b82600081518110610b8357610b82611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600660088110610bc657610bc5611c1f565b5b1a60f81b82600181518110610bde57610bdd611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600560088110610c2157610c20611c1f565b5b1a60f81b82600281518110610c3957610c38611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600460088110610c7c57610c7b611c1f565b5b1a60f81b82600381518110610c9457610c93611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600360088110610cd757610cd6611c1f565b5b1a60f81b82600481518110610cef57610cee611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600260088110610d3257610d31611c1f565b5b1a60f81b82600581518110610d4a57610d49611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600160088110610d8d57610d8c611c1f565b5b1a60f81b82600681518110610da557610da4611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600060088110610de857610de7611c1f565b5b1a60f81b82600781518110610e0057610dff611c1f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535050919050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e7481610e3f565b8114610e7f57600080fd5b50565b600081359050610e9181610e6b565b92915050565b600060208284031215610ead57610eac610e35565b5b6000610ebb84828501610e82565b91505092915050565b60008115159050919050565b610ed981610ec4565b82525050565b6000602082019050610ef46000830184610ed0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f1f57610f1e610efa565b5b8235905067ffffffffffffffff811115610f3c57610f3b610eff565b5b602083019150836001820283011115610f5857610f57610f04565b5b9250929050565b6000819050919050565b610f7281610f5f565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b60008060008060008060006080888a031215610fb457610fb3610e35565b5b600088013567ffffffffffffffff811115610fd257610fd1610e3a565b5b610fde8a828b01610f09565b9750975050602088013567ffffffffffffffff81111561100157611000610e3a565b5b61100d8a828b01610f09565b9550955050604088013567ffffffffffffffff8111156110305761102f610e3a565b5b61103c8a828b01610f09565b9350935050606061104f8a828b01610f80565b91505092959891949750929550565b600081519050919050565b600082825260208201905092915050565b60005b8381101561109857808201518184015260208101905061107d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110c08261105e565b6110ca8185611069565b93506110da81856020860161107a565b6110e3816110a4565b840191505092915050565b6000602082019050818103600083015261110881846110b5565b905092915050565b61111981610f5f565b82525050565b60006020820190506111346000830184611110565b92915050565b600082825260208201905092915050565b7f4465706f736974436f6e74726163743a20696e76616c6964207075626b65792060008201527f6c656e6774680000000000000000000000000000000000000000000000000000602082015250565b60006111a760268361113a565b91506111b28261114b565b604082019050919050565b600060208201905081810360008301526111d68161119a565b9050919050565b7f4465706f736974436f6e74726163743a20696e76616c6964207769746864726160008201527f77616c5f63726564656e7469616c73206c656e67746800000000000000000000602082015250565b600061123960368361113a565b9150611244826111dd565b604082019050919050565b600060208201905081810360008301526112688161122c565b9050919050565b7f4465706f736974436f6e74726163743a20696e76616c6964207369676e61747560008201527f7265206c656e6774680000000000000000000000000000000000000000000000602082015250565b60006112cb60298361113a565b91506112d68261126f565b604082019050919050565b600060208201905081810360008301526112fa816112be565b9050919050565b7f4465706f736974436f6e74726163743a206465706f7369742076616c7565207460008201527f6f6f206c6f770000000000000000000000000000000000000000000000000000602082015250565b600061135d60268361113a565b915061136882611301565b604082019050919050565b6000602082019050818103600083015261138c81611350565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113d782611393565b91506113e283611393565b9250826113f2576113f161139d565b5b828206905092915050565b7f4465706f736974436f6e74726163743a206465706f7369742076616c7565206e60008201527f6f74206d756c7469706c65206f66206777656900000000000000000000000000602082015250565b600061145960338361113a565b9150611464826113fd565b604082019050919050565b600060208201905081810360008301526114888161144c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114c982611393565b91506114d483611393565b9250826114e4576114e361139d565b5b828204905092915050565b7f4465706f736974436f6e74726163743a206465706f7369742076616c7565207460008201527f6f6f206869676800000000000000000000000000000000000000000000000000602082015250565b600061154b60278361113a565b9150611556826114ef565b604082019050919050565b6000602082019050818103600083015261157a8161153e565b9050919050565b82818337600083830152505050565b600061159c8385611069565b93506115a9838584611581565b6115b2836110a4565b840190509392505050565b600060a08201905081810360008301526115d8818a8c611590565b905081810360208301526115ed81888a611590565b9050818103604083015261160181876110b5565b90508181036060830152611616818587611590565b9050818103608083015261162a81846110b5565b90509998505050505050505050565b600081905092915050565b60006116508385611639565b935061165d838584611581565b82840190509392505050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6000819050919050565b6116b06116ab82611669565b611695565b82525050565b60006116c3828587611644565b91506116cf828461169f565b601082019150819050949350505050565b60006116eb8261105e565b6116f58185611639565b935061170581856020860161107a565b80840191505092915050565b600061171d82846116e0565b915081905092915050565b60008151905061173781610f69565b92915050565b60006020828403121561175357611752610e35565b5b600061176184828501611728565b91505092915050565b600080fd5b600080fd5b600080858511156117885761178761176a565b5b838611156117995761179861176f565b5b6001850283019150848603905094509492505050565b60006117bc828486611644565b91508190509392505050565b6000819050919050565b6117e36117de82610f5f565b6117c8565b82525050565b60006117f6828587611644565b915061180282846117d2565b602082019150819050949350505050565b600061181f82856117d2565b60208201915061182f82846117d2565b6020820191508190509392505050565b600061184b82866117d2565b60208201915061185c828486611644565b9150819050949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000082169050919050565b6000819050919050565b6118b06118ab82611869565b611895565b82525050565b60006118c282866116e0565b91506118ce828561189f565b6018820191506118de82846117d2565b602082019150819050949350505050565b7f4465706f736974436f6e74726163743a207265636f6e7374727563746564204460008201527f65706f7369744461746120646f6573206e6f74206d6174636820737570706c6960208201527f6564206465706f7369745f646174615f726f6f74000000000000000000000000604082015250565b600061197160548361113a565b915061197c826118ef565b606082019050919050565b600060208201905081810360008301526119a081611964565b9050919050565b60008160011c9050919050565b6000808291508390505b60018511156119fe578086048111156119da576119d961148f565b5b60018516156119e95780820291505b80810290506119f7856119a7565b94506119be565b94509492505050565b600082611a175760019050611ad3565b81611a255760009050611ad3565b8160018114611a3b5760028114611a4557611a74565b6001915050611ad3565b60ff841115611a5757611a5661148f565b5b8360020a915084821115611a6e57611a6d61148f565b5b50611ad3565b5060208310610133831016604e8410600b8410161715611aa95782820a905083811115611aa457611aa361148f565b5b611ad3565b611ab684848460016119b4565b92509050818404811115611acd57611acc61148f565b5b81810290505b9392505050565b6000611ae582611393565b9150611af083611393565b9250611b1d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611a07565b905092915050565b6000611b3082611393565b9150611b3b83611393565b9250828203905081811115611b5357611b5261148f565b5b92915050565b7f4465706f736974436f6e74726163743a206d65726b6c6520747265652066756c60008201527f6c00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bb560218361113a565b9150611bc082611b59565b604082019050919050565b60006020820190508181036000830152611be481611ba8565b9050919050565b6000611bf682611393565b9150611c0183611393565b9250828201905080821115611c1957611c1861148f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c5982611393565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c8b57611c8a61148f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000611cd182866117d2565b602082019150611ce182856116e0565b9150611ced828461189f565b601882019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220dd5dc21a08c87396100a20f3b1d7b02cff91677c4416759ba7c49439db080f0164736f6c63430008110033";

type DepositContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositContract__factory extends ContractFactory {
  constructor(...args: DepositContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositContract> {
    return super.deploy(overrides || {}) as Promise<DepositContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DepositContract {
    return super.attach(address) as DepositContract;
  }
  override connect(signer: Signer): DepositContract__factory {
    return super.connect(signer) as DepositContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositContractInterface {
    return new utils.Interface(_abi) as DepositContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositContract {
    return new Contract(address, _abi, signerOrProvider) as DepositContract;
  }
}
