/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SSVFactory, SSVFactoryInterface } from "../SSVFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061045c806100206000396000f3fe60806040526004361061001e5760003560e01c806332c02a1414610023575b600080fd5b61003d6004803603810190610038919061013c565b610053565b60405161004a919061018b565b60405180910390f35b6000818360405161006390610096565b61006d919061018b565b8190604051809103906000f590508015801561008d573d6000803e3d6000fd5b50905092915050565b610280806101a783390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d3826100a8565b9050919050565b6100e3816100c8565b81146100ee57600080fd5b50565b600081359050610100816100da565b92915050565b6000819050919050565b61011981610106565b811461012457600080fd5b50565b60008135905061013681610110565b92915050565b60008060408385031215610153576101526100a3565b5b6000610161858286016100f1565b925050602061017285828601610127565b9150509250929050565b610185816100c8565b82525050565b60006020820190506101a0600083018461017c565b9291505056fe608060405234801561001057600080fd5b50604051610280380380610280833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610169806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806312065fe01461003b5780638da5cb5b14610059575b600080fd5b610043610077565b60405161005091906100bc565b60405180910390f35b61006161007f565b60405161006e9190610118565b60405180910390f35b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b6100b6816100a3565b82525050565b60006020820190506100d160008301846100ad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610102826100d7565b9050919050565b610112816100f7565b82525050565b600060208201905061012d6000830184610109565b9291505056fea2646970667358221220d8e744b0d9a25edde9c0f67308460a92839117c34f0e56cc871b18706939baff64736f6c63430008110033a264697066735822122019a395ad724d4b50af6a55078928a6bbd649ad08062f6b5902c09d1bb495eac864736f6c63430008110033";

type SSVFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SSVFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SSVFactory__factory extends ContractFactory {
  constructor(...args: SSVFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SSVFactory> {
    return super.deploy(overrides || {}) as Promise<SSVFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SSVFactory {
    return super.attach(address) as SSVFactory;
  }
  override connect(signer: Signer): SSVFactory__factory {
    return super.connect(signer) as SSVFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SSVFactoryInterface {
    return new utils.Interface(_abi) as SSVFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SSVFactory {
    return new Contract(address, _abi, signerOrProvider) as SSVFactory;
  }
}
