name: Release
on:
  push:
    tags: [v*]

env:
  PROJECT: casimir
  STAGE: prod
  AWS_REGION: us-east-2

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Get the tag name
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install and build all package dependencies
        run: npm ci
        env:
          PUBLIC_STAGE: ${{ env.STAGE }}

      - name: Deploy cdk infrastructure
        run: npm run deploy:cdk

      - name: Sync new version with develop
        if: ${{ github.actor != 'nektos/act' }}
        run: |
          git config --global user.name 'robosupport'
          git config --global user.email 'support@consensusnetworks.com'
          git fetch --no-recurse-submodules
          git checkout $TARGET_BRANCH
          git checkout ${GITHUB_REF##*/} -- package.json package-lock.json CHANGELOG.md
          git add -A
          git diff-index --quiet HEAD ||  git commit -am "Sync released version files (skip deploy)"
          git push --force origin $TARGET_BRANCH
        env:
          TARGET_BRANCH: develop
          
      - name: Slack the team
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://casimir.co | *:ocean: Casimir (Prod)*> deployment finished with <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} | _${{ job.status }}_>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
